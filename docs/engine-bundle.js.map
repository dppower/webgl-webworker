{"version":3,"file":"engine-bundle.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/rxjs/_esm5/util/root.js","../node_modules/rxjs/_esm5/util/isFunction.js","../node_modules/rxjs/_esm5/util/isArray.js","../node_modules/rxjs/_esm5/util/isObject.js","../node_modules/rxjs/_esm5/util/errorObject.js","../node_modules/rxjs/_esm5/util/tryCatch.js","../node_modules/rxjs/_esm5/util/UnsubscriptionError.js","../node_modules/rxjs/_esm5/Subscription.js","../node_modules/rxjs/_esm5/Observer.js","../node_modules/rxjs/_esm5/symbol/rxSubscriber.js","../node_modules/rxjs/_esm5/Subscriber.js","../node_modules/rxjs/_esm5/symbol/observable.js","../node_modules/rxjs/_esm5/util/noop.js","../node_modules/rxjs/_esm5/Observable.js","../node_modules/rxjs/_esm5/util/toSubscriber.js","../node_modules/rxjs/_esm5/util/pipe.js","../node_modules/rxjs/_esm5/observable/ScalarObservable.js","../node_modules/rxjs/_esm5/observable/EmptyObservable.js","../node_modules/rxjs/_esm5/util/isScheduler.js","../node_modules/rxjs/_esm5/observable/ArrayObservable.js","../node_modules/rxjs/_esm5/util/isArrayLike.js","../node_modules/rxjs/_esm5/symbol/iterator.js","../node_modules/rxjs/_esm5/InnerSubscriber.js","../node_modules/rxjs/_esm5/OuterSubscriber.js","../node_modules/rxjs/_esm5/operators/mergeMap.js","../node_modules/rxjs/_esm5/util/subscribeToResult.js","../node_modules/rxjs/_esm5/util/isPromise.js","../node_modules/rxjs/_esm5/util/identity.js","../node_modules/rxjs/_esm5/operators/mergeAll.js","../node_modules/rxjs/_esm5/util/ObjectUnsubscribedError.js","../node_modules/rxjs/_esm5/SubjectSubscription.js","../node_modules/rxjs/_esm5/Subject.js","../node_modules/rxjs/_esm5/operators/refCount.js","../node_modules/rxjs/_esm5/observable/ConnectableObservable.js","../node_modules/rxjs/_esm5/operators/multicast.js","../node_modules/rxjs/_esm5/operators/share.js","../node_modules/@angular/core/esm5/core.js","../node_modules/rxjs/_esm5/observable/merge.js","../node_modules/rxjs/_esm5/operator/share.js","../build/game-engine/vec3.js","../build/game-engine/game-object.js","../build/game-engine/quaternion.js","../build/game-engine/mat4.js","../build/game-engine/transform.js","../build/game-engine/input-state.js","../build/game-engine/game-engine.js","../build/game-engine/worker-messenger.js","../build/game-engine/game-state.js","../build/game-engine/game-camera.js","../build/game-engine/main.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _root = __window || __global || __self;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n/*@__PURE__*/ (function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map \n","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map \n","/** PURE_IMPORTS_START ._errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n;\n//# sourceMappingURL=tryCatch.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport var UnsubscriptionError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\n//# sourceMappingURL=UnsubscriptionError.js.map \n","/** PURE_IMPORTS_START ._util_isArray,._util_isObject,._util_isFunction,._util_tryCatch,._util_errorObject,._util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport var Subscription = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map \n","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nvar Symbol = root.Symbol;\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    /*@__PURE__*/ Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map \n","/** PURE_IMPORTS_START ._util_isFunction,._Subscription,._Observer,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isFunction } from './util/isFunction';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport var Subscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map \n","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexport var observable = /*@__PURE__*/ getSymbolObservable(root);\n/**\n * @deprecated use observable instead\n */\nexport var $$observable = observable;\n//# sourceMappingURL=observable.js.map \n","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map \n","/** PURE_IMPORTS_START ._util_root,._util_toSubscriber,._symbol_observable,._util_pipe PURE_IMPORTS_END */\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport var Observable = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n                PromiseCtor = root.Rx.config.Promise;\n            }\n            else if (root.Promise) {\n                PromiseCtor = root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\n//# sourceMappingURL=Observable.js.map \n","/** PURE_IMPORTS_START .._Subscriber,.._symbol_rxSubscriber,.._Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map \n","/** PURE_IMPORTS_START ._noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map \n","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ScalarObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable));\n//# sourceMappingURL=ScalarObservable.js.map \n","/** PURE_IMPORTS_START .._Observable PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var EmptyObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable));\n//# sourceMappingURL=EmptyObservable.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map \n","/** PURE_IMPORTS_START .._Observable,._ScalarObservable,._EmptyObservable,.._util_isScheduler PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var ArrayObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable));\n//# sourceMappingURL=ArrayObservable.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArrayLike.js.map \n","/** PURE_IMPORTS_START .._util_root PURE_IMPORTS_END */\nimport { root } from '../util/root';\nexport function symbolIteratorPonyfill(root) {\n    var Symbol = root.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexport var iterator = /*@__PURE__*/ symbolIteratorPonyfill(root);\n/**\n * @deprecated use iterator instead\n */\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map \n","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var InnerSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n//# sourceMappingURL=InnerSubscriber.js.map \n","/** PURE_IMPORTS_START ._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var OuterSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=OuterSubscriber.js.map \n","/** PURE_IMPORTS_START .._util_subscribeToResult,.._OuterSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nexport var MergeMapOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var MergeMapSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=mergeMap.js.map \n","/** PURE_IMPORTS_START ._root,._isArrayLike,._isPromise,._isObject,.._Observable,.._symbol_iterator,.._InnerSubscriber,.._symbol_observable PURE_IMPORTS_END */\nimport { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        var iterator = result[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        var obs = result[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\n//# sourceMappingURL=subscribeToResult.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map \n","/** PURE_IMPORTS_START ._mergeMap,.._util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, null, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map \n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport var ObjectUnsubscribedError = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\n//# sourceMappingURL=ObjectUnsubscribedError.js.map \n","/** PURE_IMPORTS_START ._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport var SubjectSubscription = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n//# sourceMappingURL=SubjectSubscription.js.map \n","/** PURE_IMPORTS_START ._Observable,._Subscriber,._Subscription,._util_ObjectUnsubscribedError,._SubjectSubscription,._symbol_rxSubscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nexport var SubjectSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\n/**\n * @class Subject<T>\n */\nexport var Subject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\n/**\n * @class AnonymousSubject<T>\n */\nexport var AnonymousSubject = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n//# sourceMappingURL=Subject.js.map \n","/** PURE_IMPORTS_START .._Subscriber PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map \n","/** PURE_IMPORTS_START .._Subject,.._Observable,.._Subscriber,.._Subscription,.._operators_refCount PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nexport var ConnectableObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map \n","/** PURE_IMPORTS_START .._observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport var MulticastOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n//# sourceMappingURL=multicast.js.map \n","/** PURE_IMPORTS_START ._multicast,._refCount,.._Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n;\n//# sourceMappingURL=share.js.map \n","/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { __assign, __extends } from 'tslib';\nimport { Observable } from 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport { share } from 'rxjs/operator/share';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = /** @class */ (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from \\@angular/animations.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, forwardRef, resolveForwardRef, Injector, ReflectiveInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Injectable, Self, SkipSelf, Host, NgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, ValueUnwrapper as ɵValueUnwrapper, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, ReflectionCapabilities as ɵReflectionCapabilities, RenderDebugInfo as ɵRenderDebugInfo, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, clearOverrides as ɵclearOverrides, overrideComponentView as ɵoverrideComponentView, overrideProvider as ɵoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid, AUTO_STYLE, trigger$$1 as trigger, animate$$1 as animate, group$$1 as group, sequence$$1 as sequence, style$$1 as style, state$$1 as state, keyframes$$1 as keyframes, transition$$1 as transition, animate$1 as ɵx, group$1 as ɵy, keyframes$1 as ɵbc, sequence$1 as ɵz, state$1 as ɵbb, style$1 as ɵba, transition$1 as ɵbd, trigger$1 as ɵw, _iterableDiffersFactory as ɵk, _keyValueDiffersFactory as ɵl, _localeFactory as ɵm, _appIdRandomProviderFactory as ɵf, defaultIterableDiffers as ɵg, defaultKeyValueDiffers as ɵh, DefaultIterableDifferFactory as ɵi, DefaultKeyValueDifferFactory as ɵj, StaticInjector as ɵb, ReflectiveInjector_ as ɵc, ReflectiveDependency as ɵd, resolveReflectiveProviders as ɵe, wtfEnabled as ɵn, createScope as ɵp, detectWTF as ɵo, endTimeRange as ɵs, leave as ɵq, startTimeRange as ɵr, makeParamDecorator as ɵa, _def as ɵt, DebugContext as ɵu };\n//# sourceMappingURL=core.js.map\n","/** PURE_IMPORTS_START .._Observable,._ArrayObservable,.._util_isScheduler,.._operators_mergeAll PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(new ArrayObservable(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map \n","/** PURE_IMPORTS_START .._operators_share PURE_IMPORTS_END */\nimport { share as higherOrder } from '../operators/share';\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return higherOrder()(this);\n}\n;\n//# sourceMappingURL=share.js.map \n","var Vec3 = (function () {\r\n    function Vec3(x, y, z) {\r\n        if (x === void 0) { x = 0.0; }\r\n        if (y === void 0) { y = 0.0; }\r\n        if (z === void 0) { z = 0.0; }\r\n        this.vector_ = new Float32Array([x, y, z]);\r\n    }\r\n    ;\r\n    Object.defineProperty(Vec3.prototype, \"x\", {\r\n        get: function () { return this.vector_[0]; },\r\n        set: function (value) { this.vector_[0] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Vec3.prototype, \"y\", {\r\n        get: function () { return this.vector_[1]; },\r\n        set: function (value) { this.vector_[1] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Vec3.prototype, \"z\", {\r\n        get: function () { return this.vector_[2]; },\r\n        set: function (value) { this.vector_[2] = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    ;\r\n    ;\r\n    ;\r\n    Object.defineProperty(Vec3.prototype, \"array\", {\r\n        get: function () { return this.vector_; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Vec3.prototype, \"length\", {\r\n        get: function () {\r\n            return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Vec3.dot = function (a, b) {\r\n        return a.x * b.x + a.y * b.y + a.z * b.z;\r\n    };\r\n    ;\r\n    Vec3.cross = function (a, b, out) {\r\n        out.x = (a.y * b.z) - (a.z * b.y);\r\n        out.y = (a.z * b.x) - (a.x * b.z);\r\n        out.z = (a.x * b.y) - (a.y * b.x);\r\n    };\r\n    ;\r\n    Vec3.prototype.normalise = function () {\r\n        var length = this.length;\r\n        if (length > 0) {\r\n            var factor = 1.0 / length;\r\n            Vec3.scale(factor, this, this);\r\n        }\r\n    };\r\n    ;\r\n    Vec3.add = function (a, b, out) {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    };\r\n    ;\r\n    Vec3.subtract = function (a, b, out) {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n    };\r\n    ;\r\n    Vec3.scale = function (s, a, out) {\r\n        out.x = a.x * s;\r\n        out.y = a.y * s;\r\n        out.z = a.z * s;\r\n    };\r\n    ;\r\n    Vec3.prototype.copy = function (a) {\r\n        for (var i in this.vector_) {\r\n            this.vector_[i] = a.array[i];\r\n        }\r\n    };\r\n    ;\r\n    return Vec3;\r\n}());\r\nexport { Vec3 };\r\n;\r\n//# sourceMappingURL=vec3.js.map","import { Vec3 } from \"./vec3\";\r\nvar GameObject = (function () {\r\n    function GameObject(transform_) {\r\n        this.transform_ = transform_;\r\n        this.isActive = true;\r\n    }\r\n    ;\r\n    GameObject.prototype.update = function (dt, inputs) {\r\n        if (inputs.left) {\r\n            var dx = 0.005 * dt * inputs.delta.x;\r\n            this.transform_.rotate(new Vec3(0.0, 0.0, 1.0), dx);\r\n        }\r\n        return this.transform_.transform;\r\n    };\r\n    ;\r\n    GameObject.prototype.markInactive = function () {\r\n        this.isActive = false;\r\n    };\r\n    ;\r\n    return GameObject;\r\n}());\r\nexport { GameObject };\r\n;\r\n//# sourceMappingURL=game-object.js.map","import { Vec3 } from \"./vec3\";\r\nvar Quaternion = (function () {\r\n    function Quaternion(axis, angle) {\r\n        if (axis === void 0) { axis = new Vec3(); }\r\n        if (angle === void 0) { angle = 0.0; }\r\n        var phi = angle * Math.PI / 360.0;\r\n        this.v_ = new Vec3();\r\n        Vec3.scale(Math.sin(phi), axis, this.v_);\r\n        this.w_ = Math.cos(phi);\r\n    }\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"x\", {\r\n        get: function () {\r\n            return this.v_.x;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"y\", {\r\n        get: function () {\r\n            return this.v_.y;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"z\", {\r\n        get: function () {\r\n            return this.v_.z;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"w\", {\r\n        get: function () {\r\n            return this.w_;\r\n        },\r\n        set: function (value) {\r\n            this.w_ = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"v\", {\r\n        get: function () {\r\n            return this.v_;\r\n        },\r\n        set: function (v) {\r\n            this.v_.copy(v);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Quaternion.prototype, \"length\", {\r\n        get: function () {\r\n            return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2) + Math.pow(this.z, 2) + Math.pow(this.w, 2));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    ;\r\n    ;\r\n    Quaternion.prototype.conjugate = function () {\r\n        var c = new Quaternion();\r\n        Vec3.scale(-1.0, this.v_, c.v);\r\n        c.w = this.w_;\r\n        return c;\r\n    };\r\n    ;\r\n    Quaternion.prototype.rotate = function (v) {\r\n        var p = new Quaternion();\r\n        p.w = 0.0;\r\n        p.v = v;\r\n        var r = this.multiply(p).multiply(this.conjugate());\r\n        return r;\r\n    };\r\n    ;\r\n    Quaternion.prototype.normalise = function () {\r\n        var factor = 1.0 / this.length;\r\n        Vec3.scale(factor, this.v, this.v);\r\n        this.w *= factor;\r\n    };\r\n    Quaternion.prototype.multiply = function (q) {\r\n        this.normalise();\r\n        q.normalise();\r\n        var r = new Quaternion();\r\n        r.w = this.w * q.w - Vec3.dot(this.v_, q.v);\r\n        var v = new Vec3();\r\n        Vec3.scale(q.w, this.v_, v);\r\n        Vec3.add(r.v, v, r.v);\r\n        Vec3.scale(this.w, q.v, v);\r\n        Vec3.add(r.v, v, r.v);\r\n        Vec3.cross(this.v_, q.v, v);\r\n        Vec3.add(r.v, v, r.v);\r\n        return r;\r\n    };\r\n    ;\r\n    return Quaternion;\r\n}());\r\nexport { Quaternion };\r\n//# sourceMappingURL=quaternion.js.map","var Mat4 = (function () {\r\n    function Mat4() {\r\n        this.matrix_ = new Float32Array(16);\r\n        this.identity();\r\n    }\r\n    ;\r\n    Object.defineProperty(Mat4.prototype, \"array\", {\r\n        get: function () {\r\n            return this.matrix_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Mat4.prototype.identity = function () {\r\n        this.matrix_[0] = 1.0;\r\n        this.matrix_[1] = 0;\r\n        this.matrix_[2] = 0;\r\n        this.matrix_[3] = 0;\r\n        this.matrix_[4] = 0;\r\n        this.matrix_[5] = 1.0;\r\n        this.matrix_[6] = 0;\r\n        this.matrix_[7] = 0;\r\n        this.matrix_[8] = 0;\r\n        this.matrix_[9] = 0;\r\n        this.matrix_[10] = 1.0;\r\n        this.matrix_[11] = 0;\r\n        this.matrix_[12] = 0;\r\n        this.matrix_[13] = 0;\r\n        this.matrix_[14] = 0;\r\n        this.matrix_[15] = 1.0;\r\n    };\r\n    ;\r\n    Mat4.multiply = function (a, b, out) {\r\n        var a11 = a.array[0], a12 = a.array[1], a13 = a.array[2], a14 = a.array[3], a21 = a.array[4], a22 = a.array[5], a23 = a.array[6], a24 = a.array[7], a31 = a.array[8], a32 = a.array[9], a33 = a.array[10], a34 = a.array[11], a41 = a.array[12], a42 = a.array[13], a43 = a.array[14], a44 = a.array[15];\r\n        for (var i = 0; i < 16; i += 4) {\r\n            var b1 = b.array[i], b2 = b.array[i + 1], b3 = b.array[i + 2], b4 = b.array[i + 3];\r\n            out.array[i] = b1 * a11 + b2 * a21 + b3 * a31 + b4 * a41;\r\n            out.array[i + 1] = b1 * a12 + b2 * a22 + b3 * a32 + b4 * a42;\r\n            out.array[i + 2] = b1 * a13 + b2 * a23 + b3 * a33 + b4 * a43;\r\n            out.array[i + 3] = b1 * a14 + b2 * a24 + b3 * a34 + b4 * a44;\r\n        }\r\n    };\r\n    ;\r\n    Mat4.prototype.rotate = function (q) {\r\n        var r = new Mat4();\r\n        q.normalise();\r\n        var n = 2.0;\r\n        var wx = n * q.w * q.x;\r\n        var wy = n * q.w * q.y;\r\n        var wz = n * q.w * q.z;\r\n        var xx = n * q.x * q.x;\r\n        var yy = n * q.y * q.y;\r\n        var zz = n * q.z * q.z;\r\n        var xy = n * q.x * q.y;\r\n        var xz = n * q.x * q.z;\r\n        var yz = n * q.y * q.z;\r\n        r.array[0] = 1.0 - (yy + zz);\r\n        r.array[1] = xy + wz;\r\n        r.array[2] = xz - wy;\r\n        r.array[4] = xy - wz;\r\n        r.array[5] = 1.0 - (xx + zz);\r\n        r.array[6] = yz + wx;\r\n        r.array[8] = xz + wy;\r\n        r.array[9] = yz - wx;\r\n        r.array[10] = 1.0 - (xx + yy);\r\n        Mat4.multiply(this, r, this);\r\n    };\r\n    ;\r\n    Mat4.prototype.scale = function (v) {\r\n        var s = new Mat4();\r\n        s.array[0] = v.x;\r\n        s.array[5] = v.y;\r\n        s.array[10] = v.z;\r\n        Mat4.multiply(this, s, this);\r\n    };\r\n    ;\r\n    Mat4.prototype.translate = function (v) {\r\n        var t = new Mat4();\r\n        t.array[12] = v.x;\r\n        t.array[13] = v.y;\r\n        t.array[14] = v.z;\r\n        Mat4.multiply(this, t, this);\r\n    };\r\n    ;\r\n    return Mat4;\r\n}());\r\nexport { Mat4 };\r\n;\r\n//# sourceMappingURL=mat4.js.map","import { Vec3 } from \"./vec3\";\r\nimport { Quaternion } from \"./quaternion\";\r\nimport { Mat4 } from \"./mat4\";\r\nvar Transform = (function () {\r\n    function Transform(position_, scale_, orientation_) {\r\n        if (position_ === void 0) { position_ = new Vec3(); }\r\n        if (scale_ === void 0) { scale_ = new Vec3(1.0, 1.0, 1.0); }\r\n        if (orientation_ === void 0) { orientation_ = new Quaternion(); }\r\n        this.position_ = position_;\r\n        this.scale_ = scale_;\r\n        this.orientation_ = orientation_;\r\n        this.transform_ = new Mat4();\r\n    }\r\n    Object.defineProperty(Transform.prototype, \"transform\", {\r\n        get: function () {\r\n            this.transform_.identity();\r\n            this.transform_.rotate(this.orientation_);\r\n            this.transform_.translate(this.position_);\r\n            this.transform_.scale(this.scale_);\r\n            return this.transform_.array;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Transform.prototype.scale = function (v) {\r\n        this.scale_.copy(v);\r\n    };\r\n    ;\r\n    Transform.prototype.translate = function (v) {\r\n        Vec3.add(this.position_, v, this.position_);\r\n    };\r\n    ;\r\n    Transform.prototype.rotate = function (vec, angle) {\r\n        var q = new Quaternion(vec, angle);\r\n        var r = this.orientation_.multiply(q);\r\n        this.orientation_ = r;\r\n    };\r\n    ;\r\n    ;\r\n    return Transform;\r\n}());\r\nexport { Transform };\r\n;\r\n//# sourceMappingURL=transform.js.map","var InputState = (function () {\r\n    function InputState() {\r\n    }\r\n    return InputState;\r\n}());\r\nexport { InputState };\r\n;\r\n//# sourceMappingURL=input-state.js.map","import { GameObject } from \"./game-object\";\r\nimport { Transform } from \"./transform\";\r\nimport { InputState } from \"./input-state\";\r\nimport { Quaternion } from \"./quaternion\";\r\nimport { Vec3 } from \"./vec3\";\r\nvar GameEngine = (function () {\r\n    function GameEngine(messenger_, gameState_) {\r\n        var _this = this;\r\n        this.messenger_ = messenger_;\r\n        this.gameState_ = gameState_;\r\n        this.current_inputs_ = new InputState();\r\n        this.inputs_subscription = this.messenger_.getInputs().subscribe(function (inputs) {\r\n            _this.current_inputs_ = inputs;\r\n        });\r\n    }\r\n    ;\r\n    GameEngine.prototype.Start = function () {\r\n        var testObject = new GameObject(new Transform(new Vec3(), new Vec3(1, 1, 1), new Quaternion(new Vec3(1.0, 0, 0), -90)));\r\n        this.gameState_.addNewObject(testObject);\r\n    };\r\n    ;\r\n    GameEngine.prototype.Update = function (dt) {\r\n        var state = this.gameState_.updateObjects(dt, this.current_inputs_);\r\n        this.messenger_.pushChanges(state);\r\n    };\r\n    ;\r\n    GameEngine.prototype.dispose = function () {\r\n        this.inputs_subscription.unsubscribe();\r\n    };\r\n    ;\r\n    return GameEngine;\r\n}());\r\nexport { GameEngine };\r\n;\r\n//# sourceMappingURL=game-engine.js.map","import { Subject } from \"rxjs/Subject\";\r\nvar WorkerMessenger = (function () {\r\n    function WorkerMessenger() {\r\n        var _this = this;\r\n        this.input_changes_ = new Subject();\r\n        this.model_changes_ = new Subject();\r\n        this.handleMessages = function (event) {\r\n            _this.input_changes_.next(event.data);\r\n        };\r\n        addEventListener(\"message\", this.handleMessages);\r\n        this.model_changes_subscription_ = this.model_changes_.subscribe(function (data) {\r\n            postMessage({ time: self.performance.now(), buffer: data }, [data]);\r\n        });\r\n    }\r\n    ;\r\n    WorkerMessenger.prototype.dispose = function () {\r\n        removeEventListener(\"message\", this.handleMessages);\r\n        this.model_changes_.complete();\r\n        this.input_changes_.complete();\r\n        this.model_changes_subscription_.unsubscribe();\r\n    };\r\n    ;\r\n    WorkerMessenger.prototype.pushChanges = function (buffer) {\r\n        this.model_changes_.next(buffer);\r\n    };\r\n    ;\r\n    WorkerMessenger.prototype.getInputs = function () {\r\n        return this.input_changes_.asObservable();\r\n    };\r\n    ;\r\n    return WorkerMessenger;\r\n}());\r\nexport { WorkerMessenger };\r\n;\r\n//# sourceMappingURL=worker-messenger.js.map","var GameState = (function () {\r\n    function GameState(camera_) {\r\n        this.camera_ = camera_;\r\n        this.game_objects_ = [];\r\n    }\r\n    ;\r\n    GameState.prototype.addNewObject = function (object) {\r\n        this.game_objects_.push(object);\r\n    };\r\n    ;\r\n    GameState.prototype.removeObject = function (index) {\r\n    };\r\n    ;\r\n    GameState.prototype.updateObjects = function (dt, inputs) {\r\n        var bufferLength = (this.game_objects_.length + 2) * 16 * 4;\r\n        var buffer = new ArrayBuffer(bufferLength);\r\n        var view = new Float32Array(buffer, 0, 16);\r\n        var projection = new Float32Array(buffer, 64, 16);\r\n        this.camera_.update(inputs);\r\n        view.set(this.camera_.view);\r\n        projection.set(this.camera_.projection);\r\n        this.game_objects_.forEach(function (object, i) {\r\n            var matrix = new Float32Array(buffer, (i + 2) * 64, 16);\r\n            matrix.set(object.update(dt, inputs));\r\n        });\r\n        return buffer;\r\n    };\r\n    ;\r\n    return GameState;\r\n}());\r\nexport { GameState };\r\n//# sourceMappingURL=game-state.js.map","import { Transform } from \"./transform\";\r\nimport { Vec3 } from \"./vec3\";\r\nvar Camera = (function () {\r\n    function Camera() {\r\n        this.minZoom = -3.0;\r\n        this.maxZoom = -6.0;\r\n        this.zoomSpeed = 0.2;\r\n        this.near_ = 0.1;\r\n        this.far_ = 100.0;\r\n        this.pMatrix_ = new Float32Array(16);\r\n        this.vMatrix_ = new Float32Array(16);\r\n        this.vFieldOfView_ = 60.0 * Math.PI / 180;\r\n        this.transform_ = new Transform();\r\n        var transform = new Vec3(0.0, 0.0, -3.5);\r\n        this.transform_.translate(transform);\r\n        this.vMatrix_ = this.transform_.transform;\r\n    }\r\n    ;\r\n    Object.defineProperty(Camera.prototype, \"view\", {\r\n        get: function () {\r\n            return this.vMatrix_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Object.defineProperty(Camera.prototype, \"projection\", {\r\n        get: function () {\r\n            this.calculateFrustrum();\r\n            return this.pMatrix_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    Camera.prototype.update = function (inputs) {\r\n        var zoom = -1 * inputs.wheel * this.zoomSpeed;\r\n        var currentPosition = this.vMatrix_[14];\r\n        zoom = (zoom + currentPosition >= this.minZoom) ? 0.0 : ((zoom + currentPosition <= this.maxZoom) ? 0.0 : zoom);\r\n        var transform = new Vec3(0.0, 0.0, zoom);\r\n        this.transform_.translate(transform);\r\n        this.vMatrix_ = this.transform_.transform;\r\n        this.aspect_ = inputs.aspect;\r\n    };\r\n    ;\r\n    Camera.prototype.calculateFrustrum = function () {\r\n        var f = Math.tan(0.5 * (Math.PI - this.vFieldOfView_));\r\n        var depth = 1.0 / (this.near_ - this.far_);\r\n        this.pMatrix_[0] = f / this.aspect_;\r\n        this.pMatrix_[5] = f;\r\n        this.pMatrix_[10] = (this.near_ + this.far_) * depth;\r\n        this.pMatrix_[11] = -1.0;\r\n        this.pMatrix_[14] = 2.0 * (this.near_ * this.far_) * depth;\r\n    };\r\n    ;\r\n    return Camera;\r\n}());\r\nexport { Camera };\r\n//# sourceMappingURL=game-camera.js.map","import { Injector } from \"@angular/core\";\r\nimport { GameEngine } from \"./game-engine\";\r\nimport { WorkerMessenger } from \"./worker-messenger\";\r\nimport { GameState } from \"./game-state\";\r\nimport { Camera } from \"./game-camera\";\r\nvar providers = [\r\n    { provide: GameEngine, deps: [WorkerMessenger, GameState] },\r\n    { provide: Camera, deps: [] },\r\n    { provide: GameState, deps: [Camera] },\r\n    { provide: WorkerMessenger, deps: [] }\r\n];\r\nvar injector = Injector.create(providers);\r\nvar interval_token;\r\n(function () {\r\n    var engine = injector.get(GameEngine);\r\n    engine.Start();\r\n    var dt = 20;\r\n    interval_token = self.setInterval(function () {\r\n        engine.Update(dt);\r\n    }, dt);\r\n})();\r\n//# sourceMappingURL=main.js.map"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__window","window","__self","self","WorkerGlobalScope","__global","global","_root","isFunction","x","isArray","isObject","tryCatchTarget","errorObject","e","tryCatcher","apply","tryCatch","fn","UnsubscriptionError","_super","errors","err","Error","map","toString","join","name","stack","message","Subscription","unsubscribe","closed","_parent","_parents","_subscriptions","_unsubscribe","empty","hasErrors","index","len","remove","flattenUnsubscriptionErrors","sub","concat","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","reduce","errs","next","value","error","complete","Symbol","root","rxSubscriber","for","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","emptyObserver","SafeSubscriber","rxSubscriberSymbol","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","_this","wrappedComplete","observable","$$observable","getSymbolObservable","noop","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","forEach","PromiseCtor","Rx","config","Promise","resolve","reject","Symbol_observable","pipe","fns","operations","_i","input","prev","toPromise","ScalarObservable","scheduler","dispatch","state","done","schedule","EmptyObservable","arg","isScheduler","ArrayObservable","array","of","pop","count","isArrayLike","iterator","Set_1","Set","Map_1","Map","keys","getOwnPropertyNames","key","symbolIteratorPonyfill","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","OuterSubscriber","innerValue","innerIndex","innerSub","MergeMapOperator","project","resultSelector","concurrent","Number","POSITIVE_INFINITY","observer","MergeMapSubscriber","hasCompleted","buffer","active","_tryNext","result","_innerSub","ish","outerSubscriber","then","setTimeout","Symbol_iterator","item","obs","TypeError","msg","subscribeToResult","_notifyResultSelector","shift","identity","mergeAll","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","higherOrderRefCount","connectableObservableDescriptor","writable","MulticastOperator","selector","shareSubjectFactory","share","subjectOrSubjectFactory","InjectionToken","_desc","ngMetadataName","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","props","parentClass","chainFn","metaCtor","makeMetadataCtor","DecoratorFactory","objOrType","annotationInstance","TypeDecorator","cls","defineProperty","annotationCls","args","values","propName","makeParamDecorator","ParamDecoratorFactory","_a","annotation","ParamDecorator","unusedKey","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","unshift","attributeName","Query","ChangeDetectionStrategy","data","first","isViewQuery","descendants","OnPush","Default","c","changeDetection","dir","pure","bindingPropertyName","hostPropertyName","eventName","NgModule","ngModule","ViewEncapsulation","Emulated","Native","None","VERSION","full","major","split","minor","patch","Inject","token","Optional","Injectable","Self","SkipSelf","_global","_symbolIterator","getSymbolIterator","Symbol_1","scheduleMicroTask","Zone","current","looseIdentical","a","isNaN","stringify","overriddenName","res","newLineIndex","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","_NullInjector","get","notFoundValue","Injector","providers","StaticInjector","NULL","IDENT","CIRCULAR","MULTI_PROVIDER_FN","GET_PROPERTY_NAME","USE_VALUE","objWithPropertyToExtract","getClosureSafeProperty","provide","String","useValue","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","providerDeps","options","j","annotations","useExisting","computeDeps","useFactory","useClass","resolveProvider","multi","multiProvider","multiProviderMixError","record","tryResolveToken","tokenPath","formatError","tokens","v","obj","undefined","depRecords","depRecord","childRecord","resolveToken","text","charAt","substr","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noAnnotationError","typeOrFunc","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","Type","Function","isType","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","factory","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","annotationArgs","ctor","parentProto","getPrototypeOf","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","params_1","_extractToken","constructDependencies","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","normalizedProvidersMap","existing","mergeResolvedReflectiveProviders","_normalizeProviders","from","some","metadata","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","originalException","dep","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","_mapProviders","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID_RANDOM_PROVIDER","_randomChar","fromCharCode","Math","floor","random","APP_BOOTSTRAP_LISTENER","Console","log","warn","_throwError","Compiler","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","CompilerFactory","ComponentRef","ComponentFactory","trace","events","ERROR_COMPONENT","_NullComponentFactoryResolver","resolveComponentFactory","component","ComponentFactoryResolver","ComponentFactoryBoundToModule","componentType","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","wtf","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","flags","createScope","wtfLeave","scope","returnValue","leaveScope","r","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","schedulerFn","errorFn","completeFn","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","zone","_nesting","_outer","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","clear","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","isDevMode","PlatformRef","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","ngZoneOption","getNgZone","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","errorHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","destroy","module","listener","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","observables","last","merge","higherOrder","componentOrFactory","componentFactory","selectorOrNode","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","ngOnDestroy","list","el","Renderer","RendererFactory2","Renderer2","ElementRef","QueryList","dirty","_results","changes","filter","find","init","toArray","reset","flatten","flat","flatItem","notifyOnChanges","setDirty","TemplateRef","ViewContainerRef","ChangeDetectorRef","EventListener","EmbeddedViewRef","ViewRef","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","styles","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","element","node","queryAllNodes","_queryNodeChildren","parentNode","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","WrappedValue","wrapped","wrap","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","o","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","LOCALE_ID","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","_addDebugContext","logError","viewDestroyedError","action","NOOP","_tokenKeyCache","tokenKey","checkBinding","def","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","isComponentView","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","NS_PREFIX_RE","splitNamespace","match","createElement","elDef","ns","createComment","parentEl","selectRootElement","attrs","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementValue","renderNode$$1","securityContext","renderValue","binding","bindings","elData","sanitizer","sanitize","removeAttribute","setElementAttribute","addClass","removeClass","unit","suffix","setStyle","removeStyle","setElementStyle","bindView","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","injectable","depValues","_createClass","_callFactory","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","vcElementData","dvcElementData","projectedViews","template","_projectedViews","viewDef","nodeFlags","parentNodeDef","childFlags","markNodeAsProjectedTemplate","attachProjectedView","renderAttachEmbeddedView","detachEmbeddedView","removeFromArray","renderDetachView","prevView","prevRenderNode","arr","EMPTY_CONTEXT","ComponentFactory_","viewDefFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","destroyed","viewRef_","viewData","move","oldViewIndex","newViewIndex","detach","_viewContainerRef","_appRef","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","disposables","vcRef","TemplateRef_","_parentView","createInjector","allowPrivateServices","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","attributeValue","setBindingDebugInfo","setElementClass","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","provDef","initNgModule","lifecycles","callNgModuleLifecycle","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","_createProviderInstance","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","findCompView","viewContainer","cdView","providerDef_1","allProviders","publicProviders","providerData","updateProp","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","prefix","_addInterpolationPart","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","componentProvider","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateTextInline","directive","ngOnChanges","ngOnInit","ngDoCheck","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyNode","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","services","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","calcHasOverrides","applyProviderOverrides","applyProviderOverridesToNgModule","comp","compFactory","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","checkIndex","_currentAction","_currentView","_currentNodeIndex","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","CAMEL_CASE_REGEXP","m","toLowerCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","Vec3","NgModuleFactory_","_ngModuleDefFactory","y","z","vector_","Float32Array","sqrt","pow","dot","cross","out","normalise","factor","scale","subtract","GameObject","transform_","isActive","update","dt","left","dx","delta","rotate","markInactive","Quaternion","axis","angle","phi","PI","v_","sin","w_","cos","w","conjugate","multiply","q","Mat4","matrix_","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b1","b2","b3","b4","wx","wy","wz","xx","yy","zz","xy","xz","yz","translate","Transform","position_","scale_","orientation_","vec","InputState","GameEngine","messenger_","gameState_","current_inputs_","inputs_subscription","getInputs","Start","testObject","addNewObject","Update","updateObjects","pushChanges","dispose","WorkerMessenger","input_changes_","model_changes_","handleMessages","addEventListener","model_changes_subscription_","postMessage","time","performance","now","removeEventListener","GameState","camera_","game_objects_","object","removeObject","bufferLength","ArrayBuffer","projection","Camera","minZoom","maxZoom","zoomSpeed","near_","far_","pMatrix_","vMatrix_","vFieldOfView_","calculateFrustrum","zoom","wheel","currentPosition","aspect_","aspect","tan","depth","engine","setInterval"],"mappings":"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"}